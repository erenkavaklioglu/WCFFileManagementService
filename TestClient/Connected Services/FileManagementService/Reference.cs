//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestClient.FileManagementService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Employee", Namespace="http://schemas.datacontract.org/2004/07/FileDefinitions")]
    [System.SerializableAttribute()]
    public partial class Employee : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SalaryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Age {
            get {
                return this.AgeField;
            }
            set {
                if ((this.AgeField.Equals(value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Salary {
            get {
                return this.SalaryField;
            }
            set {
                if ((this.SalaryField.Equals(value) != true)) {
                    this.SalaryField = value;
                    this.RaisePropertyChanged("Salary");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://erenkavaklioglu/WCFService", ConfigurationName="FileManagementService.FileManagementService")]
    public interface FileManagementService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://erenkavaklioglu/WCFService/FileManagementService/Login", ReplyAction="http://erenkavaklioglu/WCFService/FileManagementService/LoginResponse")]
        bool Login(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://erenkavaklioglu/WCFService/FileManagementService/Login", ReplyAction="http://erenkavaklioglu/WCFService/FileManagementService/LoginResponse")]
        System.Threading.Tasks.Task<bool> LoginAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://erenkavaklioglu/WCFService/FileManagementService/Logout", ReplyAction="http://erenkavaklioglu/WCFService/FileManagementService/LogoutResponse")]
        void Logout();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://erenkavaklioglu/WCFService/FileManagementService/Logout", ReplyAction="http://erenkavaklioglu/WCFService/FileManagementService/LogoutResponse")]
        System.Threading.Tasks.Task LogoutAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://erenkavaklioglu/WCFService/FileManagementService/AddEmployee", ReplyAction="http://erenkavaklioglu/WCFService/FileManagementService/AddEmployeeResponse")]
        void AddEmployee(TestClient.FileManagementService.Employee employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://erenkavaklioglu/WCFService/FileManagementService/AddEmployee", ReplyAction="http://erenkavaklioglu/WCFService/FileManagementService/AddEmployeeResponse")]
        System.Threading.Tasks.Task AddEmployeeAsync(TestClient.FileManagementService.Employee employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://erenkavaklioglu/WCFService/FileManagementService/GetEmployees", ReplyAction="http://erenkavaklioglu/WCFService/FileManagementService/GetEmployeesResponse")]
        TestClient.FileManagementService.Employee[] GetEmployees();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://erenkavaklioglu/WCFService/FileManagementService/GetEmployees", ReplyAction="http://erenkavaklioglu/WCFService/FileManagementService/GetEmployeesResponse")]
        System.Threading.Tasks.Task<TestClient.FileManagementService.Employee[]> GetEmployeesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://erenkavaklioglu/WCFService/FileManagementService/GetEmployee", ReplyAction="http://erenkavaklioglu/WCFService/FileManagementService/GetEmployeeResponse")]
        TestClient.FileManagementService.Employee GetEmployee(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://erenkavaklioglu/WCFService/FileManagementService/GetEmployee", ReplyAction="http://erenkavaklioglu/WCFService/FileManagementService/GetEmployeeResponse")]
        System.Threading.Tasks.Task<TestClient.FileManagementService.Employee> GetEmployeeAsync(string username);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface FileManagementServiceChannel : TestClient.FileManagementService.FileManagementService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FileManagementServiceClient : System.ServiceModel.ClientBase<TestClient.FileManagementService.FileManagementService>, TestClient.FileManagementService.FileManagementService {
        
        public FileManagementServiceClient() {
        }
        
        public FileManagementServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FileManagementServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FileManagementServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FileManagementServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Login(string username, string password) {
            return base.Channel.Login(username, password);
        }
        
        public System.Threading.Tasks.Task<bool> LoginAsync(string username, string password) {
            return base.Channel.LoginAsync(username, password);
        }
        
        public void Logout() {
            base.Channel.Logout();
        }
        
        public System.Threading.Tasks.Task LogoutAsync() {
            return base.Channel.LogoutAsync();
        }
        
        public void AddEmployee(TestClient.FileManagementService.Employee employee) {
            base.Channel.AddEmployee(employee);
        }
        
        public System.Threading.Tasks.Task AddEmployeeAsync(TestClient.FileManagementService.Employee employee) {
            return base.Channel.AddEmployeeAsync(employee);
        }
        
        public TestClient.FileManagementService.Employee[] GetEmployees() {
            return base.Channel.GetEmployees();
        }
        
        public System.Threading.Tasks.Task<TestClient.FileManagementService.Employee[]> GetEmployeesAsync() {
            return base.Channel.GetEmployeesAsync();
        }
        
        public TestClient.FileManagementService.Employee GetEmployee(string username) {
            return base.Channel.GetEmployee(username);
        }
        
        public System.Threading.Tasks.Task<TestClient.FileManagementService.Employee> GetEmployeeAsync(string username) {
            return base.Channel.GetEmployeeAsync(username);
        }
    }
}
